"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8931],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,y=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return r?n.createElement(y,s(s({ref:t},d),{},{components:r})):n.createElement(y,s({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,s=new Array(i);s[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6130:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),s=["components"],a={sidebar_position:3},l="Create a Permission",p={unversionedId:"CRUDStories/create-a-permission",id:"CRUDStories/create-a-permission",isDocsHomePage:!1,title:"Create a Permission",description:"A permission is used to give the generator more clues about the user types, and what each user is allowed to do.",source:"@site/docs/CRUDStories/create-a-permission.md",sourceDirName:"CRUDStories",slug:"/CRUDStories/create-a-permission",permalink:"/user-stories-as-code/docs/CRUDStories/create-a-permission",editUrl:"https://github.com/mikerudge/user-stories-as-code/edit/main/website/docs/CRUDStories/create-a-permission.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create a Model",permalink:"/user-stories-as-code/docs/CRUDStories/create-a-model"},next:{title:"Full Example",permalink:"/user-stories-as-code/docs/CRUDStories/full-example"}},d=[{value:"Set Deny Permission",id:"set-deny-permission",children:[],level:2},{value:"Set Owner Permission",id:"set-owner-permission",children:[],level:2},{value:"Add Permission To User Type",id:"add-permission-to-user-type",children:[],level:2},{value:"Add Permission To Models",id:"add-permission-to-models",children:[],level:2}],c={toc:d};function u(e){var t=e.components,r=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"create-a-permission"},"Create a Permission"),(0,i.kt)("p",null,"A permission is used to give the generator more clues about the user types, and what each user is allowed to do."),(0,i.kt)("p",null,"UserTypes can be given default permissions, for example our admin user type should be able to ",(0,i.kt)("inlineCode",{parentName:"p"},"create")," ",(0,i.kt)("inlineCode",{parentName:"p"},"read")," ",(0,i.kt)("inlineCode",{parentName:"p"},"update")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"delete")," everything in the project so lets add that in."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const adminReadPermission = new Permission({ userType: admin, actions: ['read'], can: true });\n")),(0,i.kt)("h2",{id:"set-deny-permission"},"Set Deny Permission"),(0,i.kt)("p",null,"All permission will default as a grant permission but you can also set them to ",(0,i.kt)("inlineCode",{parentName:"p"},"deny")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"adminUser.addPermission({\n  actions: ['all'],\n  can: false,\n});\n")),(0,i.kt)("h2",{id:"set-owner-permission"},"Set Owner Permission"),(0,i.kt)("p",null,"The owner permission allows you to specify that only the owner of the model can do the action."),(0,i.kt)("p",null,"For example, if you want to only allow users to update their own profile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"new Permission({ userType: admin, actions: ['read'], condition: 'owner' });\n")),(0,i.kt)("h2",{id:"add-permission-to-user-type"},"Add Permission To User Type"),(0,i.kt)("p",null,"Adding permissions to a user type is a default way to set permissions on all models. For example if you want an 'admin' who can do everything on every model."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"adminUser.addPermission({\n  actions: ['create', 'read', 'update', 'delete'],\n});\n\n// Or you can just use 'all' as a helper\nadminUser.addPermission({\n  actions: ['all'],\n});\n")),(0,i.kt)("h2",{id:"add-permission-to-models"},"Add Permission To Models"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const userModel = new Model({ name: 'User' }).addPermission(new Permission({ userType: admin, actions: ['all'] }));\n")))}u.isMDXComponent=!0}}]);